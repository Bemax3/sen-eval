#ARG PHP_VERSION=8.2
#FROM arlissilva/php8.2_oci8:1.0 as php
#
#RUN apt-get update -y
#RUN apt-get install -y unzip libpq-dev libcurl4-gnutls-dev
#ENV COMPOSER_VERSION 2.1.5
#RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer --version=$COMPOSER_VERSION
#RUN curl -sL https://deb.nodesource.com/setup_14.x | bash
#
#RUN apt-get update \
#    && apt-get install -y --no-install-recommends \
#        libz-dev \
#        wget \
#        libpq-dev \
#        libjpeg-dev \
#        libpng-dev \
#        libssl-dev \
#        libzip-dev \
#        unzip \
#        zip \
#        nodejs \
#        libldb-dev \
#        libldap2-dev \
#        libaio-dev \
#        mc \
#        unzip \
#        zlib1g-dev \
#        libmemcached-dev\
#    && apt-get clean \
#    && pecl install redis \
#    && docker-php-ext-configure gd \
#    && docker-php-ext-configure zip \
#    && docker-php-ext-configure ldap \
#    && docker-php-ext-install \
#        gd \
#        exif \
#        opcache \
#        pdo_mysql \
#        pdo_pgsql \
#        pgsql \
#        pcntl \
#        zip \
#        ldap \
#    && docker-php-ext-enable redis \
#    && rm -rf /var/lib/apt/lists/*;
#
##
#ENV ORA_CLIENT=instantclient-basic-linux.x64-21.1.0.0.0.zip
#ENV ORA_CLIENT_SDK=instantclient-sdk-linux.x64-21.1.0.0.0.zip
#ENV ORA_URL_PART=https://download.oracle.com/otn_software/linux/instantclient/211000
#
#WORKDIR /opt
#RUN curl -O ${ORA_URL_PART}/${ORA_CLIENT} \
#    && curl -O ${ORA_URL_PART}/${ORA_CLIENT_SDK} \
#    && unzip /opt/${ORA_CLIENT} \
#    && unzip /opt/${ORA_CLIENT_SDK} \
#    && rm /opt/${ORA_CLIENT} && rm ${ORA_CLIENT_SDK}
### put your tnsnames.ora if you have it
##COPY instantclient/tnsnames.ora /opt/instantclient_21_1/network/admin/tnsnames.ora
### put your oracle.conf with full path to instant client
##COPY instantclient/oracle.conf /etc/ld.so.conf.d/oracle.conf
#RUN ldconfig
#
#
## enable opcache
#
#RUN docker-php-ext-enable opcache
#
## install & enable xdebug
#
##RUN pecl install xdebug-3.0.2 && docker-php-ext-enable xdebug
##COPY xdebug.ini /usr/local/etc/php/conf.d/xdebug.ini
#
## install & enable oci8
#
#RUN pecl install --onlyreqdeps --nobuild oci8 \
#        && cd "$(pecl config-get temp_dir)/oci8" \
#        && phpize \
#        && ./configure --with-oci8=instantclient,/opt/instantclient_21_1 \
#        && make && make install \
#        && docker-php-ext-enable oci8
#
## install & enable pdo-oci
#
#RUN docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/opt/instantclient_21_1,21.1 \
#        && docker-php-ext-install pdo_oci
#
## install & enable memcached
#
#RUN pecl install memcached-3.1.5 && docker-php-ext-enable memcached
#
## copy dev php.ini
#
#RUN mv "$PHP_INI_DIR/php.ini-development" "$PHP_INI_DIR/php.ini"
#
## install composer
#
#RUN curl -sS https://getcomposer.org/installer | php -- \
#        --install-dir=/usr/local/bin \
#        --filename=composer
#
#
#
#WORKDIR /var/www/html
#
#COPY . .
#
#ENV PORT=8000
#RUN chmod +x Docker/entrypoint.sh
#ENTRYPOINT [ "Docker/entrypoint.sh" ]
#
#ARG PHP_VERSION=8.2
#FROM php:${PHP_VERSION}-apache as php
#
#
#RUN apt update && apt install -y \
#    libaio1 \
#	libaio-dev \
#    libbz2-dev \
#    libcurl4-openssl-dev \
#    libffi-dev \
#    libldap2-dev \
#    libldb-dev \
#    libonig-dev \
#	libzip-dev \
#    libpng-dev \
#    libssl-dev \
#    unixodbc-dev \
#    unzip \
#    wget \
#    zlib1g-dev \
#	git \
#	vim \
#    && rm -rf /var/lib/apt/lists/*
#
#RUN mkdir /opt/oracle \
#	&& wget https://download.oracle.com/otn_software/linux/instantclient/2111000/instantclient-basic-linux.x64-21.11.0.0.0dbru.zip \
#	&& wget https://download.oracle.com/otn_software/linux/instantclient/2111000/instantclient-sdk-linux.x64-21.11.0.0.0dbru.zip \
#	&& unzip instantclient-basic-linux.x64-21.11.0.0.0dbru.zip -d /opt/oracle \
#	&& unzip instantclient-sdk-linux.x64-21.11.0.0.0dbru.zip -d /opt/oracle \
#	&& rm -rf *.zip \
#	&& mv /opt/oracle/instantclient_21_11 /opt/oracle/instantclient
#
#ENV LD_LIBRARY_PATH /opt/oracle/instantclient/
#ENV ORACLE_HOME /opt/oracle/instantclient/
#
#RUN ldconfig
#
#RUN docker-php-source extract \
#    && docker-php-ext-install \
#        bz2 \
#        curl \
#        ffi \
#        fileinfo \
#        gd \
#        gettext \
#        ldap \
#        mbstring \
#        exif \
#        mysqli \
#	zip \
#    && docker-php-source delete \
#
##php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');" \
##	&& php composer-setup.php \
##	&& php -r "unlink('composer-setup.php');" \
##	&& mv composer.phar /usr/local/bin/composer \
#RUN echo "--with-oci8=instantclient,/opt/oracle/instantclient" | pecl install oci8-3.0.1 \
#    && echo "extension=oci8" > /usr/local/etc/php/conf.d/docker-php-ext-oci8.ini
#
#WORKDIR /var/www/html
#
#COPY . .
#
#ENV PORT=8000
#RUN chmod +x Docker/entrypoint.sh
#ENTRYPOINT [ "Docker/entrypoint.sh" ]
#
#ARG PHP_VERSION=8.2.12
#FROM php:${PHP_VERSION}-apache-bullseye as php
#
#LABEL org.opencontainers.image.authors="Roni Kumar Saha <roni.csed@gmail.com>"
#
#ENV APACHE_DOCUMENT_ROOT /var/www/public
#
#RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf
#RUN sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf
#
#ENV LD_LIBRARY_PATH=/usr/lib/instantclient
#
##install exetentions and dependencies
#RUN set -eux; \
#	\
#	sed -i'.bak' 's/$/ contrib/' /etc/apt/sources.list; \
#	apt-get update && apt-get -y upgrade; \
#	apt-get install -y libaio1 wget unzip \
#		libicu-dev \
#    libzip-dev \
#        libyaml-dev \
#        gettext \
#        libmagickwand-dev\
#        librabbitmq-dev\
#        libpq-dev  \
#        imagemagick \
#        libxslt1-dev \
#        \
#        libfreetype6 \
#        libjpeg62-turbo \
#        libpng16-16 \
#        libx11-6 \
#        libxcb1 \
#        libxext6 \
#        libxrender1 \
#	; \
#	\
#	pecl install apcu; \
#  pecl install yaml; \
#  pecl install igbinary; \
#  docker-php-ext-enable apcu yaml igbinary; \
#  docker-php-ext-install -j$(nproc) iconv; \
#  docker-php-ext-configure intl; \
#  docker-php-ext-install -j$(nproc) intl; \
#  docker-php-ext-install -j$(nproc) \
#        exif \
#        bcmath \
#        xsl \
#        gettext \
#        opcache \
#        pdo \
#        pdo_mysql \
#        pdo_pgsql \
#        pgsql \
#        soap \
#        zip \
#        sockets; \
#  echo 'yes,yes' | pecl install redis; \
#  docker-php-ext-enable redis; \
#	cd /tmp; \
#	curl -L -O https://github.com/wkhtmltopdf/packaging/releases/download/0.12.6.1-2/wkhtmltox_0.12.6.1-2.bullseye_amd64.deb; \
#  dpkg -i wkhtmltox_0.12.6.1-2.bullseye_amd64.deb; \
#  rm -rf wkhtmltox_0.12.6.1-2.bullseye_amd64.deb; \
#	wget https://download.oracle.com/otn_software/linux/instantclient/instantclient-basiclite-linuxx64.zip ; \
#	wget https://download.oracle.com/otn_software/linux/instantclient/instantclient-sdk-linuxx64.zip \
#    ;\
#    unzip instantclient-basiclite-linuxx64.zip ; \
#    unzip instantclient-sdk-linuxx64.zip ;\
#    rm -f instantclient-basiclite-linuxx64.zip; \
#    rm -f instantclient-sdk-linuxx64.zip; \
#    mv instantclient*/ /usr/lib/instantclient; \
#    cd /usr/lib/instantclient ; \
#    rm -f *jdbc* *occi* *mysql* *README *jar uidrvci genezi adrci; \
#    echo /usr/lib/instantclient > /etc/ld.so.conf.d/oracle-instantclient.conf ;\
#    ldconfig ;\
#	echo 'instantclient,/usr/lib/instantclient' | pecl install oci8; \
#	docker-php-ext-enable oci8; \
#	curl -L https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions > /usr/local/bin/install-php-extensions \
#  ; \
#  chmod +x /usr/local/bin/install-php-extensions ; \
#  install-php-extensions gd imagick amqp; \
#  rm -f /usr/local/bin/install-php-extensions; \
#	\
#	docker-php-source delete ;\
#	apt-get remove -y g++ wget ;\
#	apt-get autoremove --purge -y && apt-get autoclean -y && apt-get clean -y ;\
#  rm -rf /var/lib/apt/lists/*; \
#  rm -rf /tmp/* /var/tmp/*;
#
### Set php configuration
#RUN { \
#            echo 'opcache.enable_cli=1'; \
#    } > /usr/local/etc/php/conf.d/opcache-recommended.ini ; \
#    { \
#            echo 'date.timezone=Asia/Dhaka'; \
#            echo 'upload_max_filesize=256M'; \
#            echo 'post_max_size=2048M'; \
#            echo 'max_input_vars=10000'; \
#            echo 'memory_limit=3504M'; \
#            echo 'expose_php = off'; \
#            echo 'max_execution_time = 300'; \
#    } > /usr/local/etc/php/conf.d/00-override.ini ; \
#    { \
#        echo 'error_reporting = 4339'; \
#        echo 'display_errors = Off'; \
#        echo 'display_startup_errors = Off'; \
#        echo 'log_errors = On'; \
#        echo 'error_log = /dev/stderr'; \
#        echo 'log_errors_max_len = 1024'; \
#        echo 'ignore_repeated_errors = On'; \
#        echo 'ignore_repeated_source = Off'; \
#        echo 'html_errors = Off'; \
#    } > /usr/local/etc/php/conf.d/error-logging.ini
#
#RUN echo 'LimitRequestFieldSize 5242880' >> /etc/apache2/apache2.conf
#
#COPY --from=composer:latest /usr/bin/composer /usr/bin/composer
#
#ENV COMPOSER_ALLOW_SUPERUSER=1
#
#RUN a2enmod rewrite
#
#RUN set -eux; \
#    	\
#    	curl -L https://github.com/ajaxray/merge2pdf/releases/download/v1.1.0/merge2pdf_linux-amd64.OS -o /usr/local/bin/merge2pdf; \
#      chmod +x /usr/local/bin/merge2pdf

FROM anhquang0611/php8.2-oci8:latest as php


RUN apt-get update \
    && apt-get install -y --no-install-recommends \
    libz-dev \
    wget \
    libpq-dev \
    libjpeg-dev \
    libpng-dev \
    libssl-dev \
    libzip-dev \
    unzip \
    zip \
    nodejs \
    libldb-dev \
    libldap2-dev \
    libaio-dev \
    mc \
    unzip \
    zlib1g-dev \
    libmemcached-dev\
    && apt-get clean \
    && docker-php-ext-configure gd \
    && docker-php-ext-configure zip \
    && docker-php-ext-configure ldap \
    && docker-php-ext-install \
        gd \
        exif \
        opcache \
        pdo_mysql \
        pdo_pgsql \
        pgsql \
        pcntl \
        zip \
        ldap \
    && docker-php-ext-enable ldap \
    && rm -rf /var/lib/apt/lists/*;

#RUN apt update && apt install -y \
#    libaio1 \
#	libaio-dev \
#    libbz2-dev \
#    libcurl4-openssl-dev \
#    libffi-dev \
#    libldap2-dev \
#    libldb-dev \
#    libonig-dev \
#	libzip-dev \
#    libpng-dev \
#    libssl-dev \
#    unixodbc-dev \
#    unzip \
#    wget \
#    zlib1g-dev \
#	git \
#	vim \
#    && rm -rf /var/lib/apt/lists/*
#
#RUN docker-php-source extract \
#    && docker-php-ext-install \
#        bz2 \
#        curl \
#        ffi \
#        fileinfo \
#        gd \
#        gettext \
#        ldap \
#        mbstring \
#        exif \
#        mysqli \
#	zip \
#    && docker-php-source delete \
#
#RUN docker-php-ext-install pdo pdo_mysql

WORKDIR /var/www/html

COPY . .

ENV PORT=8000
RUN chmod +x Docker/entrypoint.sh
ENTRYPOINT [ "Docker/entrypoint.sh" ]
